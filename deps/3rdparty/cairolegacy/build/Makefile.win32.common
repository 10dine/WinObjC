default: all

#
# Edit build/Makefile.win32.features to enable features to build
#
include $(top_srcdir)/build/Makefile.win32.inform
include $(top_srcdir)/build/Makefile.win32.features
include $(top_srcdir)/build/Makefile.win32.features-h

ifeq ($(top_builddir),)
top_builddir = $(top_srcdir)
endif

CC := cl
LD := link
AR := lib

ifeq ($(CFG),debug)
CFG_CFLAGS := -MDd -Od -Zi
CFG_LDFLAGS := -DEBUG
else
CFG_CFLAGS := -MD -O2
CFG_LDFLAGS :=
endif

# windows app container flags
# windows store
ifeq ($(WIN_SYSTEM_NAME),WindowsStore)
WIN_APP=true
ifeq ($(WIN_VERSION),10.0)
WIN_APP_CFLAGS += -DWINAPI_FAMILY=WINAPI_FAMILY_APP -DWIN32_WINNT=0x0A00 -DWINVER=0x0A00
WIN_APP_LDFLAGS += -APPCONTAINER WindowsApp.lib

ifeq ($(WIN_ARCH),ARM)
WIN_APP_CFLAGS += -D__ARM_PCS_VFP
endif
endif # endif WIN_VERSION=10.0

ifeq ($(WIN_VERSION),8.1)
WIN_APP_CFLAGS += -DWINAPI_FAMILY=WINAPI_FAMILY_PC_APP -DWIN32_WINNT=0x0603 -DWINVER=0x0603
WIN_APP_LDFLAGS += -APPCONTAINER
#CAIRO_LIBS = kernel32.lib

ifeq ($(WIN_ARCH),ARM)
WIN_APP_CFLAGS += -D__ARM_PCS_VFP
WIN_APP_LDFLAGS += -MACHINE:ARM
endif # endif WIN_ARCH=ARM
endif # endif WIN_VERSION=8.1
endif # endif WIN_SYSTEM_NAME=WindowsStore

ifeq ($(WIN_SYSTEM_NAME),WindowsPhone)
WIN_APP=true
WIN_APP_CFLAGS += -DWINAPI_FAMILY=WINAPI_FAMILY_PHONE_APP -D_WIN32_WINNT=0x0603
WIN_APP_LDFLAGS += -APPCONTAINER -subsystem:console -opt:ref WindowsPhoneCore.lib RuntimeObject.lib PhoneAppModelHost.lib -NODEFAULTLIB:kernel32.lib -NODEFAULTLIB:ole32.lib

ifeq ($(WIN_ARCH),ARM)
WIN_APP_CFLAGS += -D__ARM_PCS_VFP
WIN_APP_LDFLAGS += -MACHINE:ARM
endif
endif # endif WIN_SYSTEM_NAME=WindowsPhone

#CAIRO_LIBS =  gdi32.lib msimg32.lib user32.lib

# pixman
ifeq ($(PIXMAN_PATH),)
PIXMAN_PATH := $(top_builddir)/../pixman
endif

ifeq ($(PIXMAN_CFLAGS),)
PIXMAN_CFLAGS := -I$(PIXMAN_PATH)/pixman/
endif

ifeq ($(PIXMAN_LIBS),)
PIXMAN_LIBS := $(PIXMAN_PATH)/pixman/$(CFG)/pixman-1.lib
endif

# libpng
ifeq ($(CAIRO_HAS_PNG_FUNCTIONS),1)
ifeq ($(LIBPNG_PATH),)
LIBPNG_PATH := $(top_builddir)/../libpng
endif

ifeq ($(LIBPNG_CFLAGS),)
LIBPNG_CFLAGS += -I$(LIBPNG_PATH)/
endif

ifeq ($(LIBPNG_LIBS),)
CAIRO_LIBS +=  $(LIBPNG_PATH)/libpng.lib
else
CAIRO_LIBS += $(LIBPNG_LIBS)
endif
endif

# zlib
ifeq ($(CAIRO_HAS_PS_SURFACE)$(CAIRO_HAS_PDF_SURFACE),00)
else
ifeq ($(ZLIB_PATH),)
ZLIB_PATH := $(top_builddir)/../zlib
endif

ifeq ($(ZLIB_CFLAGS),)
ZLIB_CFLAGS += -I$(ZLIB_PATH)/
endif

ifeq ($(ZLIB_LIBS),)
CAIRO_LIBS += $(ZLIB_PATH)/zdll.lib
else
CAIRO_LIBS += $(ZLIB_LIBS)
endif
endif

#freetype
ifneq ($(FREETYPE_LIBS),)
WIN_APP_LDFLAGS += $(FREETYPE_LIBS)
endif
ifneq ($(FREETYPE_CFLAGS),)
WIN_APP_CFLAGS += $(FREETYPE_CFLAGS)
endif

DEFAULT_CFLAGS = -nologo $(CFG_CFLAGS)
DEFAULT_CFLAGS += -I. -I$(top_srcdir) -I$(top_srcdir)/src
DEFAULT_CFLAGS += $(PIXMAN_CFLAGS) $(LIBPNG_CFLAGS) $(ZLIB_CFLAGS)

CAIRO_CFLAGS = $(DEFAULT_CFLAGS) $(CFLAGS)

DEFAULT_LDFLAGS = -nologo $(CFG_LDFLAGS)
DEFAULT_ARFLAGS = -nologo

CAIRO_LDFLAGS = $(DEFAULT_LDFLAGS) $(LDFLAGS)
CAIRO_ARFLAGS = $(DEFAULT_ARFLAGS) $(LDFLAGS)

ifeq ($(WIN_APP),true)
CAIRO_CFLAGS += $(WIN_APP_CFLAGS)
CAIRO_LDFLAGS += $(WIN_APP_LDFLAGS) -DEBUG
endif

# Some generic rules

$(CFG)/%.obj: %.c $(top_srcdir)/src/cairo-features.h
	@mkdir -p $(CFG)/`dirname $<`
	@$(CC) $(CAIRO_CFLAGS) -c -Fo"$@" $<

$(CFG)/%-static.obj: %.c $(top_srcdir)/src/cairo-features.h
	@mkdir -p $(CFG)/`dirname $<`
	@$(CC) $(CAIRO_CFLAGS) -c -DCAIRO_WIN32_STATIC_BUILD=1 -Fo"$@" $<

clean:
	@rm -f $(CFG)/*.obj $(CFG)/*.dll $(CFG)/*.lib $(CFG)/*.pdb $(CFG)/*.ilk || exit 0
